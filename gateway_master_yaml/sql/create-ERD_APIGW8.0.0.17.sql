CREATE TABLE APIGW_CIRCUIT_BREAK (
    CIRCUIT_BREAK_ID        BIGINT AUTO_INCREMENT,
    SERVICE_VALUE           VARCHAR(128),
    SERVER_VALUE            VARCHAR(128),
    CREATED_AT              DATETIME(6),
    SERVER_HALF_OPEN_TIME          DATETIME(6),
    SERVICE_HALF_OPEN_TIME          DATETIME(6),
    PRIMARY KEY(CIRCUIT_BREAK_ID)
);

CREATE TABLE APIGW_CIRCUIT_BROKEN (
    CIRCUIT_BROKEN_ID        BIGINT AUTO_INCREMENT,
    SERVICE_VALUE           VARCHAR(128),
    SERVER_VALUE            VARCHAR(128),
    CREATED_AT              DATETIME(6) DEFAULT CURRENT_TIMESTAMP(),
    PRIMARY KEY(CIRCUIT_BROKEN_ID)
);

CREATE TABLE APIGW_CIRCUIT_BROKEN_HISTORY (
    SERVICE_VALUE           VARCHAR(128),
    SERVER_VALUE            VARCHAR(128),
    CREATED_AT			    DATETIME(6)
);

CREATE TABLE APIGW_GW_GROUP (
	GW_GROUP_ID      VARCHAR (128),
	GW_GROUP_NAME    VARCHAR (128),
	GW_GROUP_COMMENT VARCHAR (256),
	PRIMARY KEY(GW_GROUP_ID)
);

CREATE TABLE APIGW_GW_GROUP_CONFIG (
	GW_GROUP_ID      	VARCHAR (128),
	GW_CONFIG_TYPE      VARCHAR (128),
	GW_CONFIG_DATA      	LONGTEXT,
	
	PRIMARY KEY (GW_GROUP_ID, GW_CONFIG_TYPE),
	CONSTRAINT GWGROUPCONFIG_GWGROUP_REF FOREIGN KEY (GW_GROUP_ID) REFERENCES APIGW_GW_GROUP(GW_GROUP_ID) ON DELETE CASCADE
);

CREATE TABLE APIGW_GW (
    GW_ID            VARCHAR (128),
    GW_GROUP_ID      VARCHAR (128),
    GW_NAME          VARCHAR (128),
    GW_DESCRIPTION   VARCHAR (256),
    GW_IP            VARCHAR (64),
    GW_PORT          INTEGER DEFAULT '0',
    GW_FILE_PORT     INTEGER DEFAULT '0',
    GW_HTTP_ENDPOINT_PORT INTEGER DEFAULT '0',
    GW_HTTPS_ENDPOINT_PORT INTEGER DEFAULT '0',
    GW_STATE         VARCHAR (128),
    GW_OWNER         VARCHAR (128),
    CREATED_AT       TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP(),
    PRIMARY KEY(GW_ID, GW_GROUP_ID),
    CONSTRAINT GW_GWGROUP_REF FOREIGN KEY (GW_GROUP_ID) REFERENCES APIGW_GW_GROUP(GW_GROUP_ID) ON DELETE CASCADE
);

CREATE TABLE APIGW_API (
    GW_GROUP_ID      VARCHAR (128),
    API_ID           VARCHAR (128),
    API_NAME         VARCHAR (128),
    API_DESCRIPTION  VARCHAR (256),
    API_HOST		 VARCHAR (256),
    TAGS             VARCHAR (256),
    CREATED_AT       TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP(),
    PRIMARY KEY(API_ID)
);

CREATE TABLE APIGW_STAGE (
    STAGE_ID            VARCHAR (128),
    GW_GROUP_ID         VARCHAR (128),
    API_ID              VARCHAR (128),
    STAGE_NAME          VARCHAR (256),
    STAGE_DESCRIPTION   VARCHAR (1024),
    STAGE_VERSION		VARCHAR	(32),
    STAGE_BASEPATH		VARCHAR	(256),
    DEPLOY              TINYINT DEFAULT FALSE,
    QOS_CHECK			BOOLEAN DEFAULT FALSE,
    INVOKE_URL          VARCHAR (1024),
    ERROR_MAPPING_ID           VARCHAR (256),
    CREATED_AT          TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP(),
    API_DATA            LONGTEXT,
    PRIMARY KEY(STAGE_ID, API_ID),
    CONSTRAINT STAGE_API_REF FOREIGN KEY (API_ID) REFERENCES APIGW_API(API_ID) ON DELETE CASCADE
);

CREATE TABLE APIGW_STAGE_HISTORY (
    STAGE_ID              VARCHAR (128),
    GW_GROUP_ID           VARCHAR (128),
    API_ID                VARCHAR (128),
    DEPLOY_TIME           DATETIME NOT NULL DEFAULT now(),
    HISTORY_DESCRIPTION   VARCHAR (1024),
    API_DATA              LONGTEXT,
    DEPLOY				  BOOLEAN DEFAULT TRUE,
    PRIMARY KEY(STAGE_ID, API_ID, DEPLOY_TIME),
    CONSTRAINT STAGEHISTORY_API_REF FOREIGN KEY (API_ID) REFERENCES APIGW_API(API_ID) ON DELETE CASCADE,
    CONSTRAINT STAGEHISTORY_STAGE_REF FOREIGN KEY (STAGE_ID, API_ID) REFERENCES APIGW_STAGE(STAGE_ID, API_ID) ON DELETE CASCADE
);

CREATE TABLE APIGW_RESOURCE_THREAD_POOL (
    API_ID	    VARCHAR (128),
    POOL_ID            VARCHAR (128),
    MIN_SIZE          INTEGER,
    MAX_SIZE          INTEGER,
    PRIMARY KEY(API_ID, POOL_ID),
    CONSTRAINT POOL_API_REF FOREIGN KEY (API_ID) REFERENCES APIGW_API(API_ID) ON DELETE CASCADE
);

CREATE TABLE APIGW_APIRESOURCE (
    API_ID              VARCHAR (128),
    STAGE_ID            VARCHAR (128),
    API_PATH            VARCHAR (512),
    API_METHOD          VARCHAR (16),
    API_PROXYPATH       VARCHAR (512),
    AUTH_TYPE           VARCHAR (32),
    KEY_GROUP_ID        VARCHAR (128),
    ENDPOINT_TYPE       VARCHAR (64),
    ENDPOINT_VALUE      VARCHAR (1024),
    ENDPOINT_PROTOCOL   VARCHAR (16),
    ENDPOINT_HOST_IP    VARCHAR (128),
    ENDPOINT_HOST_PORT  INTEGER DEFAULT '0',
    ENDPOINT_METHOD     VARCHAR (8),
    IN_MESSAGE_ID       VARCHAR (1024),
    OUT_MESSAGE_ID      VARCHAR (1024),
    MAPPING_ID          VARCHAR (1024),
    SCOPE               VARCHAR (1024),
    REDIRECT			TINYINT,
    ACTIONABLE    BOOLEAN,
    RESOURCE_THREAD_POOL_ID    VARCHAR (128),
    BODY_CONVERTER_TYPE    VARCHAR (128) DEFAULT 'none',
    CREATED_AT          TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP(),
    PRIMARY KEY(API_ID, STAGE_ID, API_PATH, API_METHOD),
    
	CONSTRAINT RESOURCE_STAGE_REF FOREIGN KEY (API_ID, STAGE_ID) REFERENCES APIGW_STAGE(API_ID, STAGE_ID) ON UPDATE RESTRICT ON DELETE CASCADE
);


CREATE TABLE APIGW_APIRESOURCE_TREE (
    NODE_ID             VARCHAR (128),
    API_ID              VARCHAR (128),
    STAGE_ID            VARCHAR (128),
    NAME                VARCHAR (1024),
    FULLPATH            VARCHAR (1024),
    TYPE                VARCHAR (16),
    PARENT_FULLPATH     VARCHAR (1024),
    PRIMARY KEY(NODE_ID),
    
    CONSTRAINT TREE_STAGE_REF FOREIGN KEY (API_ID, STAGE_ID) REFERENCES APIGW_STAGE(API_ID, STAGE_ID) ON UPDATE RESTRICT ON DELETE CASCADE
);
CREATE INDEX idx_apiresource_tree ON APIGW_APIRESOURCE_TREE ( PARENT_FULLPATH );

CREATE TABLE APIGW_KEY_GROUP (
    KEY_GROUP_ID        VARCHAR (128),
    KEY_GROUP_NAME      VARCHAR (128),
    PRIMARY KEY(KEY_GROUP_ID)
);

CREATE TABLE APIGW_KEY (
    KEY_VALUE           VARCHAR (256),
    KEY_NAME            VARCHAR (128),
    KEY_DESCRIPTION     VARCHAR (1024),
    KEY_GROUP_ID        VARCHAR (128),
    CREATED_AT          TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP(),
    PRIMARY KEY(KEY_VALUE, KEY_GROUP_ID, KEY_NAME),
    UNIQUE KEY KEY_KEYVALUE_KEYGROUPID_UK (KEY_VALUE, KEY_GROUP_ID),
    UNIQUE KEY KEY_KEYNAME_KEYGROUPID_UK (KEY_NAME, KEY_GROUP_ID),
    CONSTRAINT KEY_KEYGROUP_REF FOREIGN KEY (KEY_GROUP_ID) REFERENCES APIGW_KEY_GROUP(KEY_GROUP_ID) ON DELETE CASCADE
);

CREATE TABLE APIGW_APIRESOURCE_MODEL (
    GW_GROUP_ID         VARCHAR (128),
    API_ID				VARCHAR (128),
    MODEL_ID            VARCHAR (128),
    MODEL_NAME          VARCHAR (256),
    MODEL_DESCRIPTION   VARCHAR (1024),
    CREATED_AT          TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP(),
    PROPERTIES          JSON,
    REQUIRED			JSON,
    SCHEMA_ORIGIN		JSON,
    DUMMY_DATA			JSON,
    PRIMARY KEY(API_ID, MODEL_ID),
    CONSTRAINT MODEL_API_REF FOREIGN KEY (API_ID) REFERENCES APIGW_API(API_ID) ON DELETE CASCADE
);

CREATE TABLE APIGW_APIRESOURCE_PARAMETER (
    PARAMETER_ID        VARCHAR (128) PRIMARY KEY,
    API_ID              VARCHAR (128),
    STAGE_ID            VARCHAR (128),
    API_PATH            VARCHAR (512),
    API_METHOD          VARCHAR (16),
    PARAMETER_NAME      VARCHAR (256),
    PARAMETER_IN		VARCHAR (16),
    PARAMETER_DESCRIPTION VARCHAR (512),
    REQUIRED			TINYINT,	
    PARAMETER_TYPE		VARCHAR (32),
    ITEM_TYPE			VARCHAR	(32),
    MODEL_ID			VARCHAR (128),
    CONSTRAINT PARAMETER_APIRESOURCE_REF FOREIGN KEY (API_ID, STAGE_ID, API_PATH, API_METHOD) REFERENCES APIGW_APIRESOURCE(API_ID, STAGE_ID, API_PATH, API_METHOD) ON DELETE CASCADE,
    CONSTRAINT PARAMETER_MODEL_REF FOREIGN KEY (API_ID, MODEL_ID) REFERENCES APIGW_APIRESOURCE_MODEL(API_ID, MODEL_ID) ON DELETE CASCADE
);

CREATE TABLE APIGW_APIRESOURCE_RESPONSE (
    API_ID              VARCHAR (128),
    STAGE_ID            VARCHAR (128),
    API_PATH            VARCHAR (512),
    API_METHOD          VARCHAR (16),
    RESPONSE_CODE           VARCHAR (128),
    RESPONSE_DESCRIPTION   	VARCHAR (1024),
    CREATED_AT          TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP(),
    HEADERS          		JSON,
    IN_MESSAGE_ID       VARCHAR (1024),
    OUT_MESSAGE_ID      VARCHAR (1024),
    MAPPING_ID          VARCHAR (1024),
    PRIMARY KEY(API_ID, STAGE_ID, API_PATH, API_METHOD, RESPONSE_CODE),
    CONSTRAINT RESPONSE_RESOURCE_REF FOREIGN KEY (API_ID, STAGE_ID, API_PATH, API_METHOD) REFERENCES APIGW_APIRESOURCE(API_ID, STAGE_ID, API_PATH, API_METHOD) ON DELETE CASCADE
);

CREATE TABLE APIGW_API_GATEWAYRESPONSE (
    GW_GROUP_ID         	VARCHAR (128),
    API_ID					VARCHAR (128),
    RESPONSE_CODE           VARCHAR (128),
    RESPONSE_NAME          	VARCHAR (256),
    RESPONSE_DESCRIPTION   	VARCHAR (1024),
    HEADERS          		JSON,
    BODYS					JSON,
    BODY_TYPE				VARCHAR (128),
    PRIMARY KEY(API_ID, RESPONSE_NAME),
    CONSTRAINT GATEWAYRESPONSE_API_REF FOREIGN KEY (API_ID) REFERENCES APIGW_API(API_ID) ON DELETE CASCADE
);

CREATE TABLE APIGW_API_PATHREPLACE (
    API_ID			VARCHAR (128),
    STAGE_ID            VARCHAR (128),
    API_PATH            VARCHAR (512),
    API_METHOD          VARCHAR (16),
    REPLACE_HEADER_TYPE	VARCHAR (16),
    RESPONSE_MAPPING_TYPE            VARCHAR (10),
    ADD_HEADERS        JSON,
    REMOVE_HEADERS         JSON,
    APPEND_HEADERS         JSON,
    BODY_SET_ABLE            VARCHAR(8),
    REPLACE_BODY_TYPE          VARCHAR (128),
    REPLACE_BODY	                    JSON,
    PRIMARY KEY(API_ID, STAGE_ID, API_PATH, API_METHOD, REPLACE_HEADER_TYPE),
    CONSTRAINT PATHREPLACE_RESOURCE_REF FOREIGN KEY (API_ID, STAGE_ID, API_PATH, API_METHOD) REFERENCES APIGW_APIRESOURCE(API_ID, STAGE_ID, API_PATH, API_METHOD) ON DELETE CASCADE
);

CREATE TABLE APIGW_DEPLOY (
	GW_GROUP_ID         VARCHAR(128),
	VERSION             INTEGER DEFAULT '0',
    DEPLOY_DATA         LONGTEXT,
    PRIMARY KEY(GW_GROUP_ID, VERSION)
);

CREATE TABLE APIGW_SERVERGROUP (
    GROUP_ID          	VARCHAR (128),
    GW_GROUP_ID        	VARCHAR (128),
    GROUP_NAME          VARCHAR (256),
    GROUP_DESCRIPTION   VARCHAR (1024),
    SERVER_TYPE         VARCHAR (64),
    CREATED_AT         	TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP(),
    PRIMARY KEY(GROUP_ID)
);

CREATE TABLE APIGW_SERVER (
    GROUP_ID            VARCHAR (128),
    SERVER_ID           VARCHAR (128),
    SERVICE_URL         VARCHAR (128) NOT NULL,
    SERVER_TYPE         VARCHAR (64),
    TARGET_PROTOCOL     VARCHAR (8),
    TARGET_IP           VARCHAR (17),
    TARGET_PORT         INTEGER DEFAULT '0',
    WEIGHT              INTEGER DEFAULT '0',
    CREATED_AT          TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP(),
    PRIMARY KEY(GROUP_ID, SERVER_ID),
    CONSTRAINT SERVER_REF FOREIGN KEY (GROUP_ID) REFERENCES APIGW_SERVERGROUP(GROUP_ID) ON DELETE CASCADE
);

CREATE TABLE APIGW_QOS (
    QOS_KEY      VARCHAR (256),
    QOS_SECOND              INTEGER DEFAULT '0',
    QOS_SECOND_COUNT        INTEGER DEFAULT '0',
    QOS_MINUTE              INTEGER DEFAULT '0',
    QOS_MINUTE_COUNT        INTEGER DEFAULT '0',
    QOS_HOUR                INTEGER DEFAULT '0',
    QOS_HOUR_COUNT          INTEGER DEFAULT '0',
    QOS_DAY                 INTEGER DEFAULT '0',
    QOS_DAY_COUNT           INTEGER DEFAULT '0',
    QOS_MONTH               INTEGER DEFAULT '0',
    QOS_MONTH_COUNT         INTEGER DEFAULT '0',
    PRIMARY KEY(QOS_KEY)
);


CREATE TABLE APIGW_TERMINAL_AUTH_EXPIRATION (
    LOG_YEAR          VARCHAR(4),
    LOG_MONTH     VARCHAR(2),
    LOG_DAY            VARCHAR(2) NOT NULL,
    PK_NUMBER           VARCHAR (256),
    START_TIME          TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
    END_TIME          	TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
    REGISTRATION_AT   	TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP(),
    TOKEN_VALUE         VARCHAR (512),
    PRIMARY KEY(LOG_DAY, PK_NUMBER, REGISTRATION_AT)
);

CREATE TABLE APIGW_TERMINAL_AUTH_OPERATION (
    LOG_YEAR          VARCHAR(4),
    LOG_MONTH     VARCHAR(2),
    LOG_DAY            VARCHAR(2) NOT NULL,
    PK_NUMBER           VARCHAR (256),
    START_TIME          TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
    END_TIME          	TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
    TOKEN_VALUE         VARCHAR (512),
    PRIMARY KEY(PK_NUMBER, LOG_DAY)    
);

 CREATE TABLE APIGW_SERVER_ADDRESS_CONFIG (
	BACKEND_SERVER_URL	VARCHAR(128),
    ANYLINK_SERVER_URL	VARCHAR(128),
	MONITORING_SERVER_IP VARCHAR(128),
	MONITORING_SERVER_PORT INTEGER,
	MOCK_SERVER_IP VARCHAR(128),
	MOCK_SERVER_PORT INTEGER DEFAULT 4010
 );

CREATE TABLE APIGW_ERROR_MAPPING (
    ERROR_MAPPING_ID           VARCHAR (256),
    DESCRIPTION           VARCHAR (256),
    CREATED_AT          TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP(),
    MAPPING_VALUE         LONGTEXT,
    PRIMARY KEY(ERROR_MAPPING_ID)    
);

CREATE TABLE APIGW_ERROR_STATE_CONDITION (
    GW_GROUP_ID           VARCHAR (256),
    GW_ID           VARCHAR (256),
    GW_NAME           VARCHAR (256),
    GW_IP           VARCHAR (256),
    GW_PORT           INTEGER,
    ERROR_AT          TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP()
);

CREATE TABLE APIGW_ERROR_STATE_LOG (
    LOG_ID           VARCHAR (256),
    GW_GROUP_ID           VARCHAR (256),
    GW_ID           VARCHAR (256),
    GW_NAME           VARCHAR (256),
    GW_IP           VARCHAR (256),
    GW_PORT           INTEGER,
    CREATED_AT          TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP(),
    ERROR_LOG           VARCHAR (1024),
    READABLE           BOOLEAN DEFAULT FALSE
);

CREATE TABLE APIGW_BUILD_MESSAGE (
    MESSAGE_ID          VARCHAR (128) PRIMARY KEY
);

CREATE TABLE APIGW_BUILD_MAPPING (
    MAPPING_ID          VARCHAR (128) PRIMARY KEY
);

CREATE TABLE APIGW_BUILD_CONTENT (
    VERSION             INTEGER DEFAULT '0' PRIMARY KEY,
    CONTENT             LONGTEXT
);

-- PO_Schedule Table
CREATE TABLE PO_SCHEDULE_CALENDAR
(
    CALID            VARCHAR(64)    NOT NULL, 
    CALNAME          VARCHAR(64)    NULL, 
    CALENDARTYPE     VARCHAR(20)    NULL, 
    PATTERN          VARCHAR(4000)    NULL, 
    PARENTCALID        VARCHAR(64)    NULL,
    EXCLUSIVEFLAG      VARCHAR(5)    NULL,
    PRIMARY KEY (CALID)
);

CREATE TABLE PO_SCHEDULE_TRIGGER
(
    STRIGERID          VARCHAR(64)      NOT NULL, 
    SCHEDULETYPE       VARCHAR(20)      NULL, 
    CRONEXPRESSION     VARCHAR(30)      NULL, 
    BIZ_CALID              VARCHAR(64)      NULL,
    HOLY_CALID              VARCHAR(64)      NULL,
    EXCEPTIONTYPE    VARCHAR(20)    NULL, 
    EXCEPTIONDATE    VARCHAR(20)    NULL,
    REPEATMAXCNT       INTEGER     NULL, 
    REPEATINTERVAL     INTEGER     NULL, 
    DUPLEEXEYN       VARCHAR(1)       NULL, 
    INVOKEDELAYTIME    INTEGER     NULL, 
    PRIMARY KEY (STRIGERID)
);

CREATE TABLE PO_SCHEDULE_MAIN
(
    SID           VARCHAR(64)    NOT NULL, 
    SNAME         VARCHAR(64)    NULL, 
    USERYN        VARCHAR(1)    NULL, 
    STARTTIME     VARCHAR(14)    NULL, 
    ENDTIME       VARCHAR(14)    NULL, 
    STRIGERID     VARCHAR(64)    NULL, 
    TARGETID      VARCHAR(64)    NULL, 
    MODIFYTIME    VARCHAR(14)    NULL,
    INVOKECNT    INTEGER    DEFAULT -1,
    NODEID            VARCHAR(128)     NULL,
    PRIMARY KEY (SID)
);

CREATE TABLE PO_SCHEDULE_STATUS
(
    SID               VARCHAR(64)     NOT NULL, 
    SEXNUM            VARCHAR(64)     NOT NULL,
    STARTTIME        VARCHAR(14)     NULL,
    MODIFYTIME        VARCHAR(14)     NULL, 
    STATUS            VARCHAR(20)     NULL, 
    REPEATCNT         INTEGER    NULL, 
    NODEID            VARCHAR(128)     NULL, 
    PRIMARY KEY (SID, SEXNUM)
);

CREATE TABLE PO_SCHEDULE_HISTORY
(
    SID          VARCHAR(64)    NOT NULL, 
    SEXNUM       VARCHAR(64)    NOT NULL, 
    STATUS       VARCHAR(20)    NULL, 
    STARTTIME    VARCHAR(14)    NULL, 
    ENDTIME      VARCHAR(14)    NULL,
    NODEID       VARCHAR(128)    NULL,
    ERRMSG      VARCHAR(4000)    NULL,
    PRIMARY KEY (SID,SEXNUM)
);

CREATE TABLE PO_SCHEDULE_TARGET
(
    TARGETID       VARCHAR(64)    NOT NULL, 
    EXJOBTYPE      VARCHAR(20)    NULL, 
    EXINPUTDATA    VARCHAR(4000)  NULL,
    EXHEADERDATA    VARCHAR(4000)  NULL,
    EXNODEID       VARCHAR(128)    NULL, 
    EXNAME1        VARCHAR(64)    NULL, 
    EXNAME2        VARCHAR(64)    NULL, 
    EXNAME3        VARCHAR(64)    NULL, 
    PRIMARY KEY (TARGETID)
);


-- Portal Table
CREATE TABLE APIGW_PORTAL_NOTICE_TYPE (
   	NOTICE_TYPE_CODE    INTEGER,
    NOTICE_TYPE_NAME   	VARCHAR(128),
    NOTICE_AUTHORITY   	VARCHAR(128),
    USE_FLAG			BOOLEAN DEFAULT TRUE,
    MODIFIED_AT			TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
    CREATED_AT			TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    
    PRIMARY KEY (NOTICE_TYPE_CODE)
);

CREATE TABLE APIGW_PORTAL_NOTICE (
   	NOTICE_TYPE_CODE   INTEGER NULL,
    SEQ               INTEGER AUTO_INCREMENT,
    TITLE            VARCHAR(128) NOT NULL,
    CONTENT            VARCHAR(1024) NOT NULL,
    REG_ID            VARCHAR(128) NOT NULL,
    CREATED_AT            TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP(),
    MODIFIED_AT         TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
    SEARCH_CNT         INTEGER DEFAULT 0,
    
    PRIMARY KEY (SEQ),
    CONSTRAINT NOTICE_TYPE_REF FOREIGN KEY (NOTICE_TYPE_CODE) REFERENCES APIGW_PORTAL_NOTICE_TYPE(NOTICE_TYPE_CODE) ON UPDATE CASCADE
);

-- CREATE TABLE APIGW_PORTAL_USER (
--    EMAIL         VARCHAR(128),
--     PASSWORD      VARCHAR(128),
--     ADMIN         BOOLEAN DEFAULT FALSE,
--     NAME         VARCHAR(128),
--     CELLPHONE      VARCHAR(128),
--     CREATED_AT      TIMESTAMP DEFAULT CURRENT_TIMESTAMP(),
--     MODIFIED_AT   TIMESTAMP,
--     
--     PRIMARY KEY (EMAIL)
-- );


CREATE TABLE APIGW_INTEGRATED_USER (
   	EMAIL         			VARCHAR(128),
    PASSWORD      			VARCHAR(256),
    ADMIN         			BOOLEAN DEFAULT FALSE,
    NAME         			VARCHAR(128),
    CELLPHONE      			VARCHAR(128),
    TYPE					VARCHAR(128),
    FAIL_COUNT				INTEGER DEFAULT 0,
    CREATED_AT      		TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP(),
    MODIFIED_AT   			TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
    LOGIN_AT        		TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
    
    PRIMARY KEY (EMAIL)
);


CREATE TABLE APIGW_PORTAL_APP_SERVICE_ENVIRONMENT (
	APP_ENVIRONMENT_CODE	INTEGER NOT NULL,
    APP_ENVIRONMENT_NAME	VARCHAR(128) NOT NULL
);

CREATE TABLE APIGW_PORTAL_APP (
	EMAIL					VARCHAR(128) NOT NULL,
    APP_ID					VARCHAR(128) NOT NULL,
    APP_NAME				VARCHAR(128),
    APP_ENVIRONMENT_CODE 	INTEGER NOT NULL,
    DESCRIPTION				VARCHAR(128),
    CREATED_AT				TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP(),
    
    PRIMARY KEY (APP_ID),
    CONSTRAINT APP_USER_REF FOREIGN KEY (EMAIL) REFERENCES APIGW_INTEGRATED_USER(EMAIL) ON DELETE CASCADE
);

-- 사용자에게 APP 키가 주어진다.
-- APP_EMAIL은 APP의 마스터
-- API_EMAIL은 해당 키의 주인이지만, 앱의 사용자를 나타낸다.
-- 해당 키가 해당 사용자에게 있는지 여부를 파악한다..?
CREATE TABLE APIGW_PORTAL_APP_KEY (
	APP_ID					VARCHAR(128),
    APP_KEY_VALUE			VARCHAR(128),
    APP_NAME				VARCHAR(128),
    DESCRIPTION				VARCHAR(128),
    APP_MASTER_EMAIL		VARCHAR(128),
    APP_USER_EMAIL			VARCHAR(128),
    CREATED_AT				TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP(),
    
    PRIMARY KEY (APP_KEY_VALUE),
    CONSTRAINT APPKEY_APP_REF FOREIGN KEY (APP_ID) REFERENCES APIGW_PORTAL_APP(APP_ID) ON DELETE CASCADE,
    CONSTRAINT APPKEY_MASTER_USER_REF FOREIGN KEY (APP_MASTER_EMAIL) REFERENCES APIGW_INTEGRATED_USER(EMAIL) ON DELETE CASCADE,
    CONSTRAINT APPKEY_USER_REF FOREIGN KEY (APP_USER_EMAIL) REFERENCES APIGW_INTEGRATED_USER(EMAIL) ON DELETE CASCADE
);

-- 앱별로 QOS 지정한다.
-- 앱에 API 하나씩 지정받아서 사용..?
CREATE TABLE APIGW_PORTAL_APP_KEY_USAGE (
	EMAIL					VARCHAR(128),
	APP_ID					VARCHAR(128),
    APP_KEY_VALUE			VARCHAR(128),
    APP_NAME				VARCHAR(128),
    API_ID					VARCHAR(128),
    API_NAME				VARCHAR(128),
    DESCRIPTION				VARCHAR(128),
    CREATED_AT				TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP(),
    
    PRIMARY KEY (APP_KEY_VALUE, API_ID),
    CONSTRAINT APPKEYUSEAGE_APPKEY_REF FOREIGN KEY (APP_KEY_VALUE) REFERENCES APIGW_PORTAL_APP_KEY(APP_KEY_VALUE) ON DELETE CASCADE,
    CONSTRAINT APPKEYUSEAGE_APPID_REF FOREIGN KEY (APP_ID) REFERENCES APIGW_PORTAL_APP_KEY(APP_ID) ON DELETE CASCADE,
    CONSTRAINT APPKEYUSEAGE_APIID_REF FOREIGN KEY (API_ID) REFERENCES APIGW_API(API_ID) ON DELETE CASCADE
);

-- CREATE TABLE APIGW_USER (
--    USER_ID         		VARCHAR (128),
--    USER_NAME		      	VARCHAR (128),
--    PASSWORD        		VARCHAR (256),
--    FAIL_COUNT				INTEGER,
--    CREATED_AT      		TIMESTAMP,
-- 	  MODIFIED_AT     		TIMESTAMP,
--    LOGIN_AT        		TIMESTAMP,
--    PRIMARY KEY(USER_ID)
-- );



CREATE TABLE APIGW_MOCK_SERVER_CONFIG (
	IP VARCHAR(128) NOT NULL,
	PORT INT DEFAULT '4010',
	FILE_PATH VARCHAR(128) NOT NULL,
	PRIMARY KEY (IP,PORT)
);

CREATE TABLE APIGW_MOCK_SERVER_FILE_STATE (
	API_ID VARCHAR(128) NOT NULL,
	STAGE_ID VARCHAR(128) NOT NULL,
	FULLPATH VARCHAR(128) NOT NULL,
	API_METHOD VARCHAR(128) NOT NULL,
	ADDRESS VARCHAR(128) NOT NULL,
	FILE_PATH VARCHAR(128) DEFAULT NULL,
	PRIMARY KEY (ADDRESS),
    
    CONSTRAINT 
	MOCKSERVERFILESTATE_APIRESOURCE_REF FOREIGN KEY (API_ID, STAGE_ID, FULLPATH, API_METHOD) 
		REFERENCES APIGW_APIRESOURCE(API_ID, STAGE_ID, API_PATH, API_METHOD) ON DELETE CASCADE
);